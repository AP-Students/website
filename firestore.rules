rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Centralized function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Centralized function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.access == "admin";
    }

    // Centralized function to check if the user is a member or admin (role hierarchy)
    function isMemberOrAdmin() {
      let accessLevel = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.access;
      return isAuthenticated() && (accessLevel == "admin" || accessLevel == "member");
    }

    // Allow read/write access to users for their own user data
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Admins can read/write all user documents
    match /users/{document=**} {
      allow read, write: if isAdmin();
    }

    // Pages can be accessed by members and admins
    match /pages/{document=**} {
      allow read, write: if isMemberOrAdmin();
    }

    // Allow users to access and write to their own profiles
    match /profiles/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
