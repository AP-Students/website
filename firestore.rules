rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Centralized function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Centralized function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.access == "admin";
    }

    // Centralized function to check if the user is a member or admin (role hierarchy)
    function isMemberOrAdmin() {
      let accessLevel = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.access;
      return isAuthenticated() && (accessLevel == "admin" || accessLevel == "member");
    }

    // Allow read/write access to users for their own user data
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Admins can read/write all user documents
    match /users/{document=**} {
      allow read, write: if isAdmin();
    }
		
    // Subjects and pages can be accessed by members and admins
    match /subjects/{subject} {
    	allow read: if true;
      allow write: if isMemberOrAdmin();

      match /units/{unit} {
        allow read: if true;
        allow write: if isMemberOrAdmin();

        match /chapters/{chapter} {
          allow read: if resource.data.isPublic == true || isMemberOrAdmin();
          allow write: if isMemberOrAdmin();
        }

        match /tests/{test} {
          allow read: if resource.data.isPublic == true || isMemberOrAdmin();
          allow write: if isMemberOrAdmin();
        }
      }
    }
    
    match /pages/{document=**} {
    	allow read: if true;
      allow write: if isMemberOrAdmin();
    }

    // Allow users to access and write to their own profiles
    match /profiles/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
