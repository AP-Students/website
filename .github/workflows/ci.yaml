name: CI

on:
  push:
    branches: "*"
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  workflow_dispatch:

permissions: write-all

env:
  SKIP_ENV_VALIDATION: 1

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install
        name: Install dependencies

      - run: pnpm lint

  # test_and_coverage:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #
  #     - uses: actions/setup-go@v5
  #
  #     - uses: pnpm/action-setup@v2
  #       name: Install pnpm
  #       id: pnpm-install
  #       with:
  #         version: 9
  #         run_install: false
  #
  #     - name: Get pnpm store directory
  #       id: pnpm-cache
  #       run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
  #
  #     - uses: actions/cache@v3
  #       name: Setup pnpm cache
  #       with:
  #         path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-
  #
  #     - run: pnpm install
  #
  #     - run: pnpm coverage
  #       name: Run tests and coverage

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - uses: actions/setup-go@v5

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install
        name: Install dependencies

      - run: pnpm build
        name: Build
        env:
          SKIP_ENV_VALIDATION: true
