name: Test Build on PRs

on:
  pull_request:
    branches:
      - main

jobs:
  test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # This is the node version I've been using
          node-version: 18

      - name: Create .env file
        run: |
          echo "FIREBASE_ADMIN_PROJECT_ID=dummy" > .env
          echo "FIREBASE_ADMIN_PRIVATE_KEY=dummy" >> .env
          echo "FIREBASE_ADMIN_CLIENT_EMAIL=dummy" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_KEY=dummy" >> .env
          echo "DISCORD_CLIENT_ID=dummy" >> .env
          echo "DISCORD_CLIENT_SECRET=dummy" >> .env
          echo "REDIRECT_URI=dummy" >> .env
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=dummy" >> .env
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=dummy" >> .env
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=dummy" >> .env
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=dummy" >> .env
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=dummy" >> .env
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=dummy" >> .env

      - name: Build Cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        run: npm install

      - name: Run Build
        run: npm run build

